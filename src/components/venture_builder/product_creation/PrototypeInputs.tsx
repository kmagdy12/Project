import React, { useState } from 'react';
import {
  Save,
  ArrowRight,
  ArrowLeft,
  Edit2,
  Upload,
  Code,
  Play
} from 'lucide-react';

interface PrototypeData {
  prompt: string;
  generatedPrototype: string;
}

interface PrototypeInputsProps {
  prototypeData: PrototypeData;
  onUpdatePrototype: (data: PrototypeData) => void;
  onContinue: () => void;
  onBack: () => void;
  onSkip: () => void;
  onSaveDraft: () => void;
  onExport: () => void;
}

const PrototypeInputs: React.FC<PrototypeInputsProps> = ({
  prototypeData,
  onUpdatePrototype,
  onContinue,
  onBack,
  onSkip,
  onSaveDraft,
  onExport
}) => {
  const [isEditing, setIsEditing] = useState(false);
  const [editedData, setEditedData] = useState(prototypeData);
  const [activeTab, setActiveTab] = useState<'prompt' | 'generation'>('prompt');
  const [isGenerating, setIsGenerating] = useState(false);

  const handleSave = () => {
    onUpdatePrototype(editedData);
    setIsEditing(false);
  };

  const handleGeneratePrototype = () => {
    setIsGenerating(true);
    // Simulate AI generation
    setTimeout(() => {
      setEditedData(prev => ({
        ...prev,
        generatedPrototype: `// AI-generated prototype code based on prompt:\n// ${prev.prompt}\n\n// This would be a functional prototype generated by bolt.new\nconsole.log("Prototype generated successfully!");\n\n// Example: Basic React component structure\nimport React from 'react';\n\nconst MyPrototype = () => {\n  return (\n    <div style={{ padding: '20px', border: '1px solid #ccc' }}>\n      <h1>Welcome to your Prototype!</h1>\n      <p>This is a basic interactive element.</p>\n      <button onClick={() => alert('Button clicked!')}>Click Me</button>\n    </div>\n  );\n};\n\nexport default MyPrototype;\n`
      }));
      setIsGenerating(false);
      setActiveTab('generation');
    }, 2000);
  };

  return (
    <div className="p-6 h-full overflow-y-auto space-y-4 text-sm">
      <h3 className="text-base font-semibold text-white mb-3 flex items-center">
        <Code className="w-5 h-5 text-linkedin-light mr-2" />
        Interactive Prototype
      </h3>

      <p className="text-gray-300 text-xs mb-4">
        Define the interactive prototype for your product. This will allow you to test and validate your product concept before full development.
      </p>

      {/* Tabs */}
      <div className="flex items-center space-x-2 mb-4">
        <button
          onClick={() => setActiveTab('prompt')}
          className={`px-3 py-1.5 rounded-lg text-xs font-medium transition-all ${
            activeTab === 'prompt'
              ? 'bg-linkedin text-white'
              : 'bg-linkedin-card/50 text-gray-300 hover:text-white hover:bg-linkedin-card'
          }`}
        >
          Prompt Generation
        </button>
        <button
          onClick={() => setActiveTab('generation')}
          className={`px-3 py-1.5 rounded-lg text-xs font-medium transition-all ${
            activeTab === 'generation'
              ? 'bg-linkedin text-white'
              : 'bg-linkedin-card/50 text-gray-300 hover:text-white hover:bg-linkedin-card'
          }`}
        >
          Prototype Generation
        </button>
      </div>

      {/* Prompt Generation Tab */}
      {activeTab === 'prompt' && (
        <div className="bg-linkedin-card/30 rounded-lg p-4">
          <div className="flex items-center justify-between mb-3">
            <h4 className="text-white font-medium text-xs">AI Generated Prompt</h4>
            {!isEditing && (
              <button
                onClick={() => setIsEditing(true)}
                className="p-1 text-gray-400 hover:text-white transition-colors"
              >
                <Edit2 className="w-3 h-3" />
              </button>
            )}
          </div>

          {isEditing ? (
            <div className="space-y-3">
              <div>
                <label className="block text-linkedin-light text-xs mb-1">Prompt for bolt.new</label>
                <textarea
                  value={editedData.prompt}
                  onChange={(e) => setEditedData({...editedData, prompt: e.target.value})}
                  className="w-full bg-linkedin-card border border-linkedin-border rounded-lg px-3 py-2 text-white placeholder-gray-400 focus:outline-none focus:border-linkedin resize-none text-xs"
                  rows={8}
                  placeholder="Enter your prompt for bolt.new to generate the prototype. The AI companion will pre-fill this based on your UX design."
                />
              </div>

              <div className="flex items-center justify-end space-x-2 pt-2">
                <button
                  onClick={() => {
                    setIsEditing(false);
                    setEditedData(prototypeData);
                  }}
                  className="bg-linkedin-card hover:bg-linkedin-card/70 text-white px-2 py-1 rounded-lg transition-colors text-xs"
                >
                  Cancel
                </button>
                <button
                  onClick={handleSave}
                  className="bg-linkedin hover:bg-linkedin-dark text-white px-2 py-1 rounded-lg transition-colors text-xs flex items-center space-x-1"
                >
                  <Save className="w-3 h-3" />
                  <span>Save</span>
                </button>
              </div>
            </div>
          ) : (
            <div className="bg-linkedin-card/50 rounded-lg p-3">
              <p className="text-gray-300 text-xs whitespace-pre-line">{prototypeData.prompt || "No prompt generated yet. The AI companion will generate this based on your UX design."}</p>
            </div>
          )}

          <button
            onClick={handleGeneratePrototype}
            disabled={isGenerating || !editedData.prompt}
            className="w-full flex items-center justify-center space-x-2 bg-gradient-to-r from-linkedin to-linkedin-light hover:from-linkedin-dark hover:to-linkedin disabled:from-gray-600 disabled:to-gray-600 disabled:cursor-not-allowed text-white px-6 py-3 rounded-lg font-medium transition-all mt-4"
          >
            {isGenerating ? 'Generating Prototype...' : (
              <>
                <Play className="w-4 h-4" />
                <span>Generate Prototype</span>
              </>
            )}
          </button>
        </div>
      )}

      {/* Prototype Generation Tab */}
      {activeTab === 'generation' && (
        <div className="bg-linkedin-card/30 rounded-lg p-4">
          <h4 className="text-white font-medium text-xs mb-3">AI Generated Prototype</h4>
          <div className="bg-linkedin-card/50 rounded-lg p-3 min-h-[200px] overflow-auto">
            <pre className="text-gray-300 text-xs whitespace-pre-wrap">{prototypeData.generatedPrototype || "Prototype will appear here after generation."}</pre>
          </div>
        </div>
      )}

      {/* Upload Existing Prototype */}
      <div className="bg-linkedin-card/30 rounded-lg p-4 mb-4">
        <h4 className="text-white font-medium text-xs mb-3">Upload Existing Prototype</h4>
        <button
          className="w-full border-2 border-dashed border-linkedin-border rounded-lg p-6 flex flex-col items-center justify-center hover:border-linkedin transition-colors"
        >
          <Upload className="w-10 h-10 text-linkedin-light mb-3" />
          <p className="text-white font-medium mb-1">Upload Prototype Files</p>
          <p className="text-gray-400 text-xs">Drag & drop files or click to browse</p>
        </button>
      </div>

      {/* Action Buttons */}
      <div className="flex items-center justify-between pt-4 border-t border-linkedin-border mt-4">
        <div className="flex items-center space-x-3">
          <button
            onClick={onBack}
            className="flex items-center space-x-1 text-gray-400 hover:text-white transition-colors text-xs"
          >
            <ArrowLeft className="w-3 h-3" />
            <span>Back</span>
          </button>
          <button
            onClick={onSkip}
            className="text-gray-400 hover:text-white transition-colors text-xs"
          >
            Skip for now
          </button>
          <button
            onClick={onSaveDraft}
            className="flex items-center space-x-2 bg-linkedin-card hover:bg-linkedin-card/70 text-white px-3 py-1.5 rounded-lg transition-colors text-xs"
          >
            <Save className="w-3 h-3" />
            <span>Save draft</span>
          </button>
        </div>
        <div className="flex items-center space-x-3">
          <button
            onClick={onExport}
            className="flex items-center space-x-2 bg-linkedin-card hover:bg-linkedin-card/70 text-white px-3 py-1.5 rounded-lg transition-colors text-xs"
          >
            <Code className="w-3 h-3" />
            <span>Export Prototype Code</span>
          </button>
          <button
            onClick={onContinue}
            className="flex items-center space-x-2 bg-gradient-to-r from-linkedin to-linkedin-light hover:from-linkedin-dark hover:to-linkedin text-white px-4 py-1.5 rounded-lg transition-all text-xs"
          >
            <span>Continue to MVP</span>
            <ArrowRight className="w-3 h-3" />
          </button>
        </div>
      </div>
    </div>
  );
};

export default PrototypeInputs;